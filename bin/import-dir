#!/usr/bin/env node
'use strict';

const fs = require('fs'),
			path = require('path'),
			async = require('async');
const spawn = require('child_process').spawn;
const import_path = './stormpath-exports';

const walkSync = (dir, filelist = []) => {
  fs.readdirSync(dir).forEach(file => {

    filelist = fs.statSync(path.join(dir, file)).isDirectory()
      ? walkSync(path.join(dir, file), filelist)
      : filelist.concat(path.join(dir, file));

  });

	return filelist;
}

const files = walkSync(import_path);

const import_file = (file) => {
	const import_dirs = spawn('./bin/import-json', [file]);

	import_dirs.stdout.on('data', (data) => {
	  console.log(`stdout: ${data}`);
	});

	import_dirs.stderr.on('data', (data) => {
	  console.log(`stderr: ${data}`);
	});	

	import_dirs.on('close', (code) => {
	  console.log(`import_dirs child process exited with code ${code}`);
	});
}

for (let file of files) {
  import_file(file);
	console.log('\n--------------------\n', file, '\n--------------------\n');
}